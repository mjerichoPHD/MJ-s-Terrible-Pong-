import pygame
pygame.init()

screen = pygame.display.set_mode((700,500))
pygame.display.set_caption("Pong")

doExit = False

clock = pygame.time.Clock()
screen.fill((0,100,0))

#SOUND
Hit = pygame.mixer.Sound('jump.wav') #Ball hit sound
Score = pygame.mixer.Sound('Score.wav') #Ball hit sound
#variables to hold paddle position
    #these go above game loop
p1x = 20
p1y = 200
p2x = 655
p2y = 200
#ball variables
bx = 350 #x position
by = 250 #y position
bVx = 5 #x velocity (horizontal speed
bVy = 5 #y velocity (vertical speed)

p1Score = 0
p2Score = 0

while not doExit: #game loop---------------------------------------------------
        
        #event stuff
    clock.tick(60)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            doExit = True
            
    #game logic---------------------------------------------

    keys = pygame.key.get_pressed()
    if keys[pygame.K_w]:
        p1y-=5
    if keys[pygame.K_s]:
        p1y+=5
    if keys[pygame.K_UP]:
        p2y-=5
    if keys[pygame.K_DOWN]:
        p2y+=5
        


    #reflect ball off side walls of screen
    if bx < 0 or bx + 20 > 700:
        bVx *= -1
        pygame.mixer.Sound.play(Hit)
    #reflect ball off top and bottom
    if by < 0 or by - 20 > 455:
        bVy *= -1
        pygame.mixer.Sound.play(Hit)
        
        #ball-paddle reflection
        #left paddle collsion
    if bx < p1x + 20 and by +20> p1y and by < p1y + 100:
        bVx *= -1
        #right paddle collision
    if bx +20> p2x and by +20> p2y and by < p2y + 100:
        bVx *= -1
        
    #reflect ball off side walls of screen, change score
    if bx < 0: #this has been split up right wall collision so we can increase scores
            p2Score += 1 #python doesn't do ++
            pygame.mixer.Sound.play(Score)


    if bx+20 >700: #this has been split up right from right wall collision so we can increase scores
            p1Score += 1 #python doesn't do ++
            pygame.mixer.Sound.play(Score)

  
    #ball movement
    bx += bVx
    by += bVy
    #render section----------------------------------------
    screen.fill((0,100,0))
    #middle line
    pygame.draw.line(screen, (255, 255, 255), [349, 0], [349, 500], 5)
    
    #draw rectangle
    pygame.draw.rect(screen, (255, 255, 255), (p1x, p1y, 20, 100), 7)

    #second paddle
    pygame.draw.rect(screen, (255, 255, 255), (p2x, p2y, 20, 100), 7)
    
    
    #Draw ball
    pygame.draw.ellipse(screen, (255, 255, 255), (bx, by, 20, 20))
    
    #display scores
    font = pygame.font.Font(None, 74) #use default font
    text = font.render(str(p1Score), 1, (255, 255, 255))
    screen.blit(text, (250,10))
    text = font. render(str(p2Score), 1, (255, 255, 255))
    screen.blit(text, (420,10))
    
    #update the screen
    pygame.display.flip()
    

pygame.quit()
